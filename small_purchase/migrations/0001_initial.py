# Generated by Django 3.1.4 on 2021-12-21 04:02

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import tools.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('services', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SmallPurchaseRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.IntegerField(choices=[(0, 'Чек создан. Ожидание подтверждения оплаты.'), (1, 'Первая стадия проверок. Создание транзакции в биллинге мерчанта.'), (2, 'Списание денег с карты.'), (3, 'Закрытие транзакции в биллинге мерчанта.'), (4, 'Чек оплачен.'), (20, 'Чек стоит на паузе для ручного вмешательства.'), (21, 'Чек в очереди на отмену.'), (30, 'Чек в очереди на закрытие транзакции в биллинге мерчанта.'), (50, 'Чек отменен.')], default=0, verbose_name='Состояние чека (PayMe)')),
                ('offer_agreement', models.BooleanField(default=False, verbose_name='Пользовательское соглашение')),
                ('date_started', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания заказа')),
                ('date_finished', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время завершения заказа')),
                ('special_price', models.BooleanField(default=False, verbose_name='Я являюсь членом АТБ')),
                ('price', models.BigIntegerField(blank=True, null=True, verbose_name='Цена на услугу')),
                ('amount', models.IntegerField(blank=True, null=True, verbose_name='Кол-во наименований товара')),
                ('overall_price', models.BigIntegerField(blank=True, null=True, verbose_name='Общая цена')),
                ('payment_type', models.CharField(blank=True, choices=[('payme', 'PayMe'), ('bank', 'Оплата через банк')], max_length=30, null=True, verbose_name='Тип оплаты')),
                ('finished', models.BooleanField(default=False, verbose_name='Завершено')),
                ('is_paid', models.BooleanField(default=False, help_text='В случае с оплатой через банк, галочка должна быть поставлена вручную', verbose_name='Оплачено')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='services.service', verbose_name='Услуга')),
            ],
            options={
                'verbose_name': 'Мини-покупка',
                'verbose_name_plural': 'Мини-покупки',
            },
        ),
        migrations.CreateModel(
            name='IndividualPayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(help_text='<span class="text-danger font-weight-bold">(полностью, как в паспорте, латиницей)</span>', max_length=300, verbose_name='ФИО')),
                ('pinfl', models.CharField(help_text=tools.utils.pinfl_help_text, max_length=30, validators=[django.core.validators.validate_integer], verbose_name='ПИНФЛ')),
                ('passport_n', models.CharField(max_length=30, verbose_name='Номер паспорта')),
                ('phone_number', models.CharField(max_length=40, verbose_name='Номер телефона')),
                ('email', models.EmailField(max_length=254, verbose_name='Адрес электронной почты')),
                ('telegram_contact', models.CharField(blank=True, help_text='(номер телефона или ссылка)', max_length=300, null=True, verbose_name='Контакт в Telegram (если имеется)')),
                ('record', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='individual_payer', to='small_purchase.smallpurchaserecord', verbose_name='Запись')),
            ],
            options={
                'verbose_name': 'Физическое лицо',
                'verbose_name_plural': 'Физические лица',
            },
        ),
        migrations.CreateModel(
            name='EntityPayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('org_name', models.CharField(max_length=300, verbose_name='Наименование организации')),
                ('address', models.CharField(max_length=500, verbose_name='Адрес')),
                ('phone_number', models.CharField(max_length=40, verbose_name='Номер телефона')),
                ('org_inn', models.CharField(max_length=30, validators=[django.core.validators.validate_integer], verbose_name='ИНН организации')),
                ('email', models.EmailField(max_length=254, verbose_name='Адрес электронной почты')),
                ('head_name', models.CharField(max_length=300, verbose_name='ФИО и должность руководителя')),
                ('record', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='entity_payer', to='small_purchase.smallpurchaserecord', verbose_name='Запись')),
            ],
            options={
                'verbose_name': 'Юридическое лицо',
                'verbose_name_plural': 'Юридические лица',
            },
        ),
    ]
